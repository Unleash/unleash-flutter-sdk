name: Release SDK

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. 1.9.7)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: bot-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.UNLEASH_BOT_APP_ID }}
          private-key: ${{ secrets.UNLEASH_BOT_PRIVATE_KEY }}
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
      - run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'
          
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.bot-token.outputs.token }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.3.7

      - name: Bump version in pubspec.yaml
        run: |
          sed -i "s/^version: .*/version: ${{ github.event.inputs.version }}/" pubspec.yaml

      - name: Update sdkName in unleash_proxy_client_flutter.dart
        run: |
          sed -i "s/sdkName = 'unleash-flutter-sdk:[^']*'/sdkName = 'unleash-flutter-sdk:${{ github.event.inputs.version }}'/" lib/unleash_proxy_client_flutter.dart

      - name: Generate new changelog section with git-cliff (prepend)
        uses: orhun/git-cliff-action@v4
        with:
          args: -u --tag v${{ github.event.inputs.version }} --prepend CHANGELOG.md -o CHANGELOG.tmp

      - name: Remove temp changelog file
        run: rm CHANGELOG.tmp

      - name: Commit changes to current branch
        run: |
          set -euo pipefail
          VERSION="${{ github.event.inputs.version }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pubspec.yaml lib/unleash_proxy_client_flutter.dart CHANGELOG.md
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore: release v${VERSION}"
          fi
          # Push to the currently checked out branch (the branch the workflow runs from)
          git push origin HEAD

      - name: Create version tag on current branch
        run: |
          set -euo pipefail
          VERSION="v${{ github.event.inputs.version }}"
          if git rev-parse -q --verify "refs/tags/${VERSION}" >/dev/null; then
            echo "Tag ${VERSION} already exists, skipping."
          else
            git tag -a "${VERSION}" -m "Release ${VERSION}"
            # Pushing a tag from Actions triggers tag workflows by default
            git push origin "${VERSION}"
          fi
