name: Release SDK

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. 1.9.7)'
        required: true
        type: string
      publish_to_pubdev:
        description: 'Publish to pub.dev and push to main?'
        required: true
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install Flutter (includes Dart) so `dart` is on PATH
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter_version: 3.3.7

      - name: Bump version in pubspec.yaml
        run: |
          sed -i "s/^version: .*/version: ${{ github.event.inputs.version }}/" pubspec.yaml

      - name: Update sdkName in unleash_proxy_client_flutter.dart
        run: |
          sed -i "s/sdkName = 'unleash-flutter-sdk:[^']*'/sdkName = 'unleash-flutter-sdk:${{ github.event.inputs.version }}'/" lib/unleash_proxy_client_flutter.dart

      - name: Prepare previous changelog
        run: |
          if [ -f CHANGELOG.md ]; then cp CHANGELOG.md CHANGELOG.prev; else touch CHANGELOG.prev; fi

      - name: Generate new changelog section with git-cliff (prepend)
        uses: orhun/git-cliff-action@v4
        with:
          args: -u --tag v${{ github.event.inputs.version }} --prepend CHANGELOG.prev -o CHANGELOG.md

      - name: Replace temp changelog file
        run: mv CHANGELOG.prev CHANGELOG.md

      - name: Commit changes
        run: |
          set -euo pipefail
          VERSION="${{ github.event.inputs.version }}"
          RELEASE_BRANCH="release/${VERSION}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if git rev-parse -q --verify "refs/heads/${RELEASE_BRANCH}" >/dev/null; then
            git checkout "${RELEASE_BRANCH}"
          else
            git checkout -b "${RELEASE_BRANCH}"
          fi
          git add pubspec.yaml lib/unleash_proxy_client_flutter.dart CHANGELOG.md
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore: release v${VERSION}"
          fi
          git push --force-with-lease origin "${RELEASE_BRANCH}"

      # Use fromJSON() so the boolean input behaves like a boolean
      - name: Publish to pub.dev
        if: ${{ fromJSON(github.event.inputs.publish_to_pubdev) }}
        run: dart pub publish --force
        env:
          # If you're using a pub.dev token, keep this:
          PUB_DEV_TOKEN: ${{ secrets.PUB_DEV_TOKEN }}
          # If you switch to pub.dev's OIDC automated publishing, remove the token above.

      # Your comment says "fast-forward only", but you were doing a squash merge.
      # If you *really* want FF-only, use --ff-only and drop --squash.
      - name: Merge release branch to main (fast-forward only)
        if: ${{ fromJSON(github.event.inputs.publish_to_pubdev) }}
        run: |
          set -euo pipefail
          git fetch origin main "release/${{ github.event.inputs.version }}"
          git checkout main
          git merge --ff-only "release/${{ github.event.inputs.version }}"
          git push origin main

      - name: Create version tag on main (only when publishing)
        if: ${{ fromJSON(github.event.inputs.publish_to_pubdev) }}
        run: |
          set -euo pipefail
          VERSION="v${{ github.event.inputs.version }}"
          git checkout main
          if git rev-parse -q --verify "refs/tags/${VERSION}" >/dev/null; then
            echo "Tag ${VERSION} already exists, skipping."
          else
            git tag -a "${VERSION}" -m "Release ${VERSION}"
            git push origin "${VERSION}"
          fi
